buildscript {
    ext.kotlin_version = '1.2.10'
    ext.serialization_version = '0.4'

    repositories {
        jcenter()
        maven { url "https://kotlin.bintray.com/kotlinx" }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlinx:kotlinx-gradle-serialization-plugin:$serialization_version"
    }
}


plugins {
    id "org.jetbrains.kotlin.jvm" version "1.1.51"
    id "eclipse"
    id "idea"
    id "jaci.openrio.gradle.GradleRIO" version "2018.01.06"
}
apply plugin: 'idea'
apply plugin: 'kotlin'
apply plugin: 'kotlinx-serialization'

def TEAM = 4099
def ROBOT_CLASS = "org.usfirst.frc.team4099.robot.Robot"


// Define my targets (RoboRIO) and artifacts (deployable files)
// This is added by GradleRIO's backing project EmbeddedTools.
deploy {
    targets {
        target("roborio", jaci.openrio.gradle.frc.RoboRIO) {
            team = TEAM
        }
    }
    artifacts {
        // We still use FRCJavaArtifact since kotlin does respond as a Java build.
        artifact('frcKotlin', jaci.openrio.gradle.frc.FRCJavaArtifact) {
            targets << "roborio"
            jar = 'jar'
        }
    }
}
repositories {
    mavenCentral()
    jcenter()
    maven { url "https://kotlin.bintray.com/kotlinx" }
}

// Defining my dependencies. In this case, WPILib (+ friends), CTRE Toolsuite (Talon SRX)
// and NavX.

dependencies {
    compile wpilib()
    compile ctre()
    compile navx()

    // We need to add the Kotlin stdlib in order to use most Kotlin language features.
    compile "org.jetbrains.kotlin:kotlin-stdlib"
    compile "org.jetbrains.kotlinx:kotlinx-serialization-runtime:$serialization_version"

}

// Setting up my Jar File. In this case, adding all libraries into the main jar ('fat jar')
// in order to make them all available at runtime. Also adding the manifest so WPILib
// knows where to look for our Robot Class.
jar {
    from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    manifest jaci.openrio.gradle.GradleRIOPlugin.javaManifest(ROBOT_CLASS)
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.4'
}